{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\src\\\\components\\\\Board.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport CardEmpty from './CardEmpty';\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n  }\n\n  _createClass(Board, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var loadDeck = this.props.loadDeck;\n      loadDeck(0);\n    }\n  }, {\n    key: \"createCard\",\n    value: function createCard() {\n      var _this$props = this.props,\n          cards = _this$props.cards,\n          onCardClick = _this$props.onCardClick;\n      var html = [];\n      var card = undefined;\n      var lasted = 0;\n\n      for (var i = 0; i < 52; i++) {\n        if (i > cards.length) {\n          html.push(React.createElement(CardEmpty, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }));\n        }\n\n        if (i == cards[i].id || lasted == cards[i].id) {\n          (function () {\n            var card = cards[i];\n            html.push(React.createElement(Card, Object.assign({\n              key: card.id\n            }, card, {\n              onClick: function onClick() {\n                return onCardClick(card.id, card.value);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            })));\n          })();\n        } else {\n          html.push(React.createElement(CardEmpty, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }));\n          lasted = i;\n        }\n      }\n\n      return html;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.createCard());\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nBoard.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    value: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  onCardClick: PropTypes.func.isRequired\n};\nexport default Board;","map":{"version":3,"sources":["C:\\Users\\PhakkyoC\\WebstormProjects\\memories\\memories\\src\\components\\Board.js"],"names":["React","Component","PropTypes","Card","CardEmpty","Board","props","loadDeck","cards","onCardClick","html","card","undefined","lasted","i","length","push","id","value","display","flexWrap","createCard","propTypes","arrayOf","shape","number","isRequired","string","code","image","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8EACTA,KADS;AAElB;;;;wCACmB;AAAA,UACTC,QADS,GACG,KAAKD,KADR,CACTC,QADS;AAEhBA,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACH;;;iCACW;AAAA,wBACuB,KAAKD,KAD5B;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,WADP,eACOA,WADP;AAER,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,IAAI,GAAGC,SAAX;AACA,UAAIC,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,EAAf,EAAkBA,CAAC,EAAnB,EACA;AACI,YAAGA,CAAC,GAACN,KAAK,CAACO,MAAX,EACA;AACIL,UAAAA,IAAI,CAACM,IAAL,CAAU,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACH;;AACD,YAAIF,CAAC,IAAEN,KAAK,CAACM,CAAD,CAAL,CAASG,EAAZ,IAAkBJ,MAAM,IAAEL,KAAK,CAACM,CAAD,CAAL,CAASG,EAAvC,EAA0C;AAAA;AACtC,gBAAIN,IAAI,GAAGH,KAAK,CAACM,CAAD,CAAhB;AACAJ,YAAAA,IAAI,CAACM,IAAL,CAAU,oBAAC,IAAD;AAAM,cAAA,GAAG,EAAEL,IAAI,CAACM;AAAhB,eAAwBN,IAAxB;AAA8B,cAAA,OAAO,EAAE;AAAA,uBAAMF,WAAW,CAACE,IAAI,CAACM,EAAN,EAASN,IAAI,CAACO,KAAd,CAAjB;AAAA,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAV;AAFsC;AAGzC,SAHD,MAII;AACAR,UAAAA,IAAI,CAACM,IAAL,CAAU,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACAH,UAAAA,MAAM,GAACC,CAAP;AACH;AACJ;;AACD,aAAOJ,IAAP;AACH;;;6BACQ;AACL,aACI;AAAK,QAAA,KAAK,EAAE;AACRS,UAAAA,OAAO,EAAE,MADD;AAERC,UAAAA,QAAQ,EAAE;AAFF,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,KAAKC,UAAL,EAJF,CADJ;AAOH;;;;EAtCepB,S;;AAwCpBI,KAAK,CAACiB,SAAN,GAAkB;AACdd,EAAAA,KAAK,EAAEN,SAAS,CAACqB,OAAV,CACHrB,SAAS,CAACsB,KAAV,CAAgB;AACZP,IAAAA,EAAE,EAAEf,SAAS,CAACuB,MAAV,CAAiBC,UADT;AAEZR,IAAAA,KAAK,EAAEhB,SAAS,CAACyB,MAAV,CAAiBD,UAFZ;AAGZE,IAAAA,IAAI,EAAG1B,SAAS,CAACyB,MAAV,CAAiBD,UAHZ;AAIZG,IAAAA,KAAK,EAAG3B,SAAS,CAACyB,MAAV,CAAiBD;AAJb,GAAhB,EAKGA,UANA,EAOLA,UARY;AASdjB,EAAAA,WAAW,EAAEP,SAAS,CAAC4B,IAAV,CAAeJ;AATd,CAAlB;AAYA,eAAerB,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from './Card'\r\nimport CardEmpty from './CardEmpty'\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n        const {loadDeck} = this.props;\r\n        loadDeck(0)\r\n    }\r\n    createCard(){\r\n        const { cards, onCardClick } = this.props;\r\n        let html = [];\r\n        let card = undefined\r\n        let lasted = 0\r\n        for (let i=0;i<52;i++)\r\n        {\r\n            if(i>cards.length)\r\n            {\r\n                html.push(<CardEmpty/>)\r\n            }\r\n            if (i==cards[i].id || lasted==cards[i].id){\r\n                let card = cards[i];\r\n                html.push(<Card key={card.id} {...card} onClick={() => onCardClick(card.id,card.value)} />)\r\n            }\r\n            else{\r\n                html.push(<CardEmpty/>)\r\n                lasted=i;\r\n            }\r\n        }\r\n        return html;\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\"\r\n            }}\r\n            >{this.createCard()}</div>\r\n        )\r\n    }\r\n}\r\nBoard.propTypes = {\r\n    cards: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            value: PropTypes.string.isRequired,\r\n            code : PropTypes.string.isRequired,\r\n            image : PropTypes.string.isRequired,\r\n        }).isRequired\r\n    ).isRequired,\r\n    onCardClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Board"]},"metadata":{},"sourceType":"module"}