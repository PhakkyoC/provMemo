{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\src\\\\components\\\\Board.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport CardEmpty from './CardEmpty';\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n  }\n\n  _createClass(Board, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var loadDeck = this.props.loadDeck;\n      loadDeck(0);\n    }\n  }, {\n    key: \"createCard\",\n    value: function createCard() {\n      var _this$props = this.props,\n          cards = _this$props.cards,\n          onCardClick = _this$props.onCardClick;\n      var html = [];\n      var card = undefined;\n\n      var _loop = function _loop(i) {\n        if (i >= cards.length) {\n          html.push(React.createElement(CardEmpty, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }));\n          return \"continue\";\n        }\n\n        var card = cards[i];\n\n        if (i == card.id) {\n          html.push(React.createElement(Card, Object.assign({\n            key: card.id\n          }, card, {\n            onClick: function onClick() {\n              return onCardClick(card.id, card.value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          })));\n        } else {\n          html.push(React.createElement(CardEmpty, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }));\n        }\n      };\n\n      for (var i = 0; i < 52; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      return html;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.createCard());\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nBoard.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    value: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  onCardClick: PropTypes.func.isRequired\n};\nexport default Board;","map":{"version":3,"sources":["C:\\Users\\PhakkyoC\\WebstormProjects\\memories\\memories\\src\\components\\Board.js"],"names":["React","Component","PropTypes","Card","CardEmpty","Board","props","loadDeck","cards","onCardClick","html","card","undefined","i","length","push","id","value","display","flexWrap","createCard","propTypes","arrayOf","shape","number","isRequired","string","code","image","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8EACTA,KADS;AAElB;;;;wCACmB;AAAA,UACTC,QADS,GACG,KAAKD,KADR,CACTC,QADS;AAEhBA,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACH;;;iCACW;AAAA,wBACuB,KAAKD,KAD5B;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,WADP,eACOA,WADP;AAER,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,IAAI,GAAGC,SAAX;;AAHQ,iCAICC,CAJD;AAMJ,YAAGA,CAAC,IAAEL,KAAK,CAACM,MAAZ,EAAmB;AACfJ,UAAAA,IAAI,CAACK,IAAL,CAAU,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACA;AACH;;AACD,YAAIJ,IAAI,GAAGH,KAAK,CAACK,CAAD,CAAhB;;AACA,YAAIA,CAAC,IAAEF,IAAI,CAACK,EAAZ,EAAe;AACXN,UAAAA,IAAI,CAACK,IAAL,CAAU,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEJ,IAAI,CAACK;AAAhB,aAAwBL,IAAxB;AAA8B,YAAA,OAAO,EAAE;AAAA,qBAAMF,WAAW,CAACE,IAAI,CAACK,EAAN,EAASL,IAAI,CAACM,KAAd,CAAjB;AAAA,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAV;AACH,SAFD,MAGI;AACAP,UAAAA,IAAI,CAACK,IAAL,CAAU,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACH;AAhBG;;AAIR,WAAK,IAAIF,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,EAAf,EAAkBA,CAAC,EAAnB,EACA;AAAA,yBADSA,CACT;;AAAA,iCAGQ;AASP;;AACD,aAAOH,IAAP;AACH;;;6BACQ;AACL,aACI;AAAK,QAAA,KAAK,EAAE;AACRQ,UAAAA,OAAO,EAAE,MADD;AAERC,UAAAA,QAAQ,EAAE;AAFF,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,KAAKC,UAAL,EAJF,CADJ;AAOH;;;;EApCenB,S;;AAsCpBI,KAAK,CAACgB,SAAN,GAAkB;AACdb,EAAAA,KAAK,EAAEN,SAAS,CAACoB,OAAV,CACHpB,SAAS,CAACqB,KAAV,CAAgB;AACZP,IAAAA,EAAE,EAAEd,SAAS,CAACsB,MAAV,CAAiBC,UADT;AAEZR,IAAAA,KAAK,EAAEf,SAAS,CAACwB,MAAV,CAAiBD,UAFZ;AAGZE,IAAAA,IAAI,EAAGzB,SAAS,CAACwB,MAAV,CAAiBD,UAHZ;AAIZG,IAAAA,KAAK,EAAG1B,SAAS,CAACwB,MAAV,CAAiBD;AAJb,GAAhB,EAKGA,UANA,EAOLA,UARY;AASdhB,EAAAA,WAAW,EAAEP,SAAS,CAAC2B,IAAV,CAAeJ;AATd,CAAlB;AAYA,eAAepB,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from './Card'\r\nimport CardEmpty from './CardEmpty'\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n        const {loadDeck} = this.props;\r\n        loadDeck(0)\r\n    }\r\n    createCard(){\r\n        const { cards, onCardClick } = this.props;\r\n        let html = [];\r\n        let card = undefined\r\n        for (let i=0;i<52;i++)\r\n        {\r\n            if(i>=cards.length){\r\n                html.push(<CardEmpty/>)\r\n                continue;\r\n            }\r\n            let card = cards[i];\r\n            if (i==card.id){\r\n                html.push(<Card key={card.id} {...card} onClick={() => onCardClick(card.id,card.value)} />)\r\n            }\r\n            else{\r\n                html.push(<CardEmpty/>)\r\n            }\r\n        }\r\n        return html;\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\"\r\n            }}\r\n            >{this.createCard()}</div>\r\n        )\r\n    }\r\n}\r\nBoard.propTypes = {\r\n    cards: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            value: PropTypes.string.isRequired,\r\n            code : PropTypes.string.isRequired,\r\n            image : PropTypes.string.isRequired,\r\n        }).isRequired\r\n    ).isRequired,\r\n    onCardClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Board"]},"metadata":{},"sourceType":"module"}