{"ast":null,"code":"/*\r\n * action types\r\n */\nimport fetch from 'cross-fetch';\nexport var GET_DECK = 'GET_DECK';\nexport var FLIP_CARD = 'FLIP_CARD';\nexport var TIMER = \"TIMER\";\nexport var SET_CARD = \"SET_CARD\";\n/*\r\n * action creators\r\n */\n\nfunction receiveCard(json) {\n  return json;\n}\n\nfunction getCards(json) {\n  var idDeck = json.deck_id;\n  return fetch(\"https://deckofcardsapi.com/api/deck/\".concat(idDeck, \"/draw/?count=52\")).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return receiveCard(json);\n  });\n}\n\nfunction fetchDeck() {\n  return fetch(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\").then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return getCards(json);\n  });\n}\n\nexport function getDeck(e) {\n  return function (dispatch) {\n    return fetchDeck().then(function (deck) {\n      dispatch({\n        type: GET_DECK,\n        deck: deck\n      });\n    });\n  };\n} // export function onCardClick(id,value) {\n//     // return {type: FLIP_CARD, id}\n//     return dispatch => {\n//         dispatch(updateCard(value,id))\n//             return dispatch(cardFlip(id));\n//     };\n// }\n\nexport function updateCardGame(value, id) {\n  return {\n    type: SET_CARD,\n    value: value,\n    id: id\n  };\n}\nexport function cardFlip(id) {\n  return {\n    type: FLIP_CARD,\n    id: id\n  };\n}\nexport function updateTimer() {\n  return function (dispatch) {\n    return dispatch({\n      type: TIMER\n    });\n  };\n}\nexport function cardCheck(id) {}","map":{"version":3,"sources":["C:\\Users\\PhakkyoC\\WebstormProjects\\memories\\memories\\src\\Actions.js"],"names":["fetch","GET_DECK","FLIP_CARD","TIMER","SET_CARD","receiveCard","json","getCards","idDeck","deck_id","then","response","fetchDeck","getDeck","e","dispatch","deck","type","updateCardGame","value","id","cardFlip","updateTimer","cardCheck"],"mappings":"AAAA;;;AAGA,OAAOA,KAAP,MAAkB,aAAlB;AAGA,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,SAAS,GAAC,WAAhB;AACP,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP;;;;AAGA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACvB,SAAOA,IAAP;AACH;;AAED,SAASC,QAAT,CAAkBD,IAAlB,EAAwB;AACpB,MAAIE,MAAM,GAAGF,IAAI,CAACG,OAAlB;AACA,SAAOT,KAAK,+CAAwCQ,MAAxC,qBAAL,CACFE,IADE,CACG,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACL,IAAT,EAAJ;AAAA,GADX,EAEFI,IAFE,CAEG,UAAAJ,IAAI;AAAA,WAAID,WAAW,CAACC,IAAD,CAAf;AAAA,GAFP,CAAP;AAIH;;AAED,SAASM,SAAT,GAAqB;AACjB,SAAOZ,KAAK,iEAAL,CACFU,IADE,CACG,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACL,IAAT,EAAJ;AAAA,GADX,EAEFI,IAFE,CAEG,UAAAJ,IAAI;AAAA,WAAIC,QAAQ,CAACD,IAAD,CAAZ;AAAA,GAFP,CAAP;AAIH;;AAED,OAAO,SAASO,OAAT,CAAiBC,CAAjB,EAAoB;AACvB,SAAO,UAAUC,QAAV,EAAmB;AACtB,WAAOH,SAAS,GAAGF,IAAZ,CAAiB,UAAAM,IAAI,EAAI;AAC5BD,MAAAA,QAAQ,CAAE;AACNE,QAAAA,IAAI,EAAEhB,QADA;AAENe,QAAAA,IAAI,EAAJA;AAFM,OAAF,CAAR;AAIH,KALM,CAAP;AAMH,GAPD;AAQH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,cAAT,CAAwBC,KAAxB,EAA8BC,EAA9B,EAAkC;AACrC,SAAO;AAACH,IAAAA,IAAI,EAAEb,QAAP;AAAiBe,IAAAA,KAAK,EAALA,KAAjB;AAAuBC,IAAAA,EAAE,EAAFA;AAAvB,GAAP;AACH;AAED,OAAO,SAASC,QAAT,CAAkBD,EAAlB,EAAsB;AACzB,SAAO;AAACH,IAAAA,IAAI,EAAEf,SAAP;AAAkBkB,IAAAA,EAAE,EAAFA;AAAlB,GAAP;AACH;AAED,OAAO,SAASE,WAAT,GAAuB;AAC1B,SAAO,UAAUP,QAAV,EAAmB;AACtB,WAAOA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEd;AAAP,KAAD,CAAf;AACH,GAFD;AAGH;AACD,OAAO,SAASoB,SAAT,CAAmBH,EAAnB,EAAuB,CAE7B","sourcesContent":["/*\r\n * action types\r\n */\r\nimport fetch from 'cross-fetch'\r\n\r\n\r\nexport const GET_DECK = 'GET_DECK';\r\nexport const FLIP_CARD='FLIP_CARD';\r\nexport const TIMER = \"TIMER\";\r\nexport const SET_CARD = \"SET_CARD\";\r\n/*\r\n * action creators\r\n */\r\nfunction receiveCard(json) {\r\n    return json\r\n}\r\n\r\nfunction getCards(json) {\r\n    let idDeck = json.deck_id;\r\n    return fetch(`https://deckofcardsapi.com/api/deck/${idDeck}/draw/?count=52`)\r\n        .then(response => response.json())\r\n        .then(json => receiveCard(json))\r\n\r\n}\r\n\r\nfunction fetchDeck() {\r\n    return fetch(`https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1`)\r\n        .then(response => response.json())\r\n        .then(json => getCards(json))\r\n\r\n}\r\n\r\nexport function getDeck(e) {\r\n    return function (dispatch){\r\n        return fetchDeck().then(deck => {\r\n            dispatch( {\r\n                type: GET_DECK,\r\n                deck,\r\n            })\r\n        })\r\n    }\r\n}\r\n// export function onCardClick(id,value) {\r\n//     // return {type: FLIP_CARD, id}\r\n//     return dispatch => {\r\n//         dispatch(updateCard(value,id))\r\n//             return dispatch(cardFlip(id));\r\n//     };\r\n// }\r\n\r\nexport function updateCardGame(value,id) {\r\n    return {type: SET_CARD, value,id}\r\n}\r\n\r\nexport function cardFlip(id) {\r\n    return {type: FLIP_CARD, id}\r\n}\r\n\r\nexport function updateTimer() {\r\n    return function (dispatch){\r\n        return dispatch({type: TIMER})\r\n    }\r\n}\r\nexport function cardCheck(id) {\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}