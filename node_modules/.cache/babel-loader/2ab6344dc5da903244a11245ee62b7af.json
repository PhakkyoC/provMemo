{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\PhakkyoC\\\\WebstormProjects\\\\memories\\\\memories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { GET_DECK, FLIP_CARD, TIMER, SET_CARD, UNFLIP_CARDS, BLOCKED, UNBLOCKED } from './Actions';\n\nfunction game() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    timer: 300,\n    score: 0,\n    flipped: {\n      'id': undefined,\n      'value': \"\"\n    }\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TIMER:\n      state.timer = state.timer - 1;\n      return _objectSpread({}, state);\n\n    case SET_CARD:\n      if (state.flipped.id != undefined) {\n        if (state.flipped.value == action.value && state.flipped.id != action.id) {\n          state.score = state.score + 1;\n          state.flipped = {\n            'id': undefined,\n            'value': \"\"\n          };\n        } else {\n          state.flipped = {\n            'id': undefined,\n            'value': \"\"\n          };\n        }\n      } else {\n        state.flipped.id = action.id;\n        state.flipped.value = action.value;\n      }\n\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}\n\nfunction cards() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DECK:\n      var i = 0;\n      action.deck.cards.map(function (e) {\n        e.flipped = false;\n        e.id = i;\n        e.blocked = false;\n        state[i] = e;\n        i++;\n      });\n      return _toConsumableArray(state);\n\n    case FLIP_CARD:\n      return state.map(function (card, index) {\n        if (action.id === card.id) {\n          if (!card.flipped && !card.blocked) {\n            return Object.assign({}, card, {\n              flipped: !card.flipped\n            });\n          }\n        }\n\n        return card;\n      });\n\n    case UNFLIP_CARDS:\n      return state.map(function (card, index) {\n        return Object.assign({}, card, {\n          flipped: false\n        });\n      });\n\n    case BLOCKED:\n      return state.map(function (card, index) {\n        return Object.assign({}, card, {\n          blocked: true\n        });\n      });\n\n    case UNBLOCKED:\n      return state.map(function (card, index) {\n        return Object.assign({}, card, {\n          blocked: false\n        });\n      });\n\n    case SUPPR_CARD:\n      return state.map(function (card, index) {\n        if (action.id === card.id) {\n          if (!card.flipped && !card.blocked) {\n            return Object.assign({}, card, {\n              flipped: !card.flipped\n            });\n          }\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar gameApp = combineReducers({\n  game: game,\n  cards: cards\n});\nexport default gameApp;","map":{"version":3,"sources":["C:\\Users\\PhakkyoC\\WebstormProjects\\memories\\memories\\src\\Reducers.js"],"names":["combineReducers","GET_DECK","FLIP_CARD","TIMER","SET_CARD","UNFLIP_CARDS","BLOCKED","UNBLOCKED","game","state","timer","score","flipped","undefined","action","type","id","value","cards","i","deck","map","e","blocked","card","index","Object","assign","SUPPR_CARD","gameApp"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\r\nimport {\r\n    GET_DECK,FLIP_CARD,TIMER,SET_CARD,UNFLIP_CARDS,BLOCKED,UNBLOCKED\r\n} from './Actions'\r\n\r\nfunction game(state = {timer:300,score:0,flipped:{'id':undefined,'value':\"\"}},action) {\r\n    switch (action.type) {\r\n        case TIMER:\r\n            state.timer = state.timer-1;\r\n            return {...state};\r\n        case SET_CARD:\r\n            if (state.flipped.id!=undefined)\r\n            {\r\n                if (state.flipped.value==action.value && state.flipped.id!=action.id)\r\n                {\r\n                    state.score=state.score+1;\r\n                    state.flipped={'id':undefined,'value':\"\"};\r\n                }\r\n                else{\r\n                    state.flipped={'id':undefined,'value':\"\"};\r\n                }\r\n            }\r\n            else\r\n            {\r\n                state.flipped.id = action.id\r\n                state.flipped.value = action.value\r\n            }\r\n            return {...state};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction cards(state = [], action) {\r\n    switch (action.type) {\r\n        case GET_DECK:\r\n            let i = 0;\r\n            action.deck.cards.map((e) =>{\r\n                e.flipped = false;\r\n                e.id = i;\r\n                e.blocked = false;\r\n                state[i] = e;\r\n                i++;\r\n            })\r\n            return [...state]\r\n        case FLIP_CARD:\r\n            return state.map((card,index ) => {\r\n                if (action.id === card.id) {\r\n                    if (!card.flipped && !card.blocked)\r\n                    {\r\n                        return Object.assign({}, card, {\r\n                            flipped: !card.flipped\r\n                        })\r\n                    }\r\n                }\r\n                return card\r\n            })\r\n        case UNFLIP_CARDS:\r\n            return state.map((card,index ) => {\r\n                return Object.assign({}, card, {\r\n                    flipped: false\r\n                })\r\n            })\r\n        case BLOCKED:\r\n            return state.map((card,index ) => {\r\n                return Object.assign({}, card, {\r\n                    blocked: true\r\n                })\r\n            })\r\n        case UNBLOCKED:\r\n            return state.map((card,index ) => {\r\n                return Object.assign({}, card, {\r\n                    blocked: false\r\n                })\r\n            })\r\n        case SUPPR_CARD:\r\n            return state.map((card,index ) => {\r\n                if (action.id === card.id) {\r\n                    if (!card.flipped && !card.blocked)\r\n                    {\r\n                        return Object.assign({}, card, {\r\n                            flipped: !card.flipped\r\n                        })\r\n                    }\r\n                }\r\n        })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst gameApp = combineReducers({\r\n    game,\r\n    cards\r\n});\r\n\r\nexport default gameApp"]},"metadata":{},"sourceType":"module"}